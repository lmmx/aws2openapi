name: update-aws-apis

# based on https://github.com/APIs-guru/aws2openapi/blob/main/.github/workflows/update.yaml
# originally based on https://github.com/victoriadrake/victoriadrake/blob/master/.github/workflows/update.yaml
# fine-grained permissions: Actions, Administration, Contents (+ default: Metadata)

on:
  workflow_dispatch: {}
  # push:
  #   branches:
  #     - main
  # schedule:
  #   - cron: '0 19 * * 1-5'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🍽️ Get working copy
        uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: 🍳 Update
        run: |
          git clone https://github.com/lmmx/aws-openapi-schemas
          git clone -n --depth 1 --branch 1.29.90 https://github.com/boto/botocore --single-branch --filter=tree:0
          cd botocore
          git sparse-checkout set --no-cone botocore/data
          git checkout
          echo "SDKTAG=`git describe --abbrev=0 --tags`" >> $GITHUB_ENV
          cd ..
          git clone --depth 1 https://github.com/lmmx/boto-js
          mv botocore/botocore/data/stepfunctions/2016-11-23/examples-1.json boto-js/apis/states-2016-11-23.examples.json
          mv botocore/botocore/data/stepfunctions/2016-11-23/paginators-1.json boto-js/apis/states-2016-11-23.paginators.json
          mv botocore/botocore/data/stepfunctions/2016-11-23/service-2.json boto-js/apis/states-2016-11-23.normal.json
          npm i
          node getPreferred ./boto-js/apis
          node aws2openapi ./boto-js/apis ./aws-openapi-schemas/schemas/botocore -y
      - name: 🚀 Deploy
        id: deploy
        run: |
          cd aws-openapi-schemas/schemas
          git config user.name "Louis Maddox"
          git config user.email "lmmx@users.noreply.github.com"
          git add botocore
          git diff-index --quiet HEAD || git commit -am "Update AWS APIs to $SDKTAG" && echo "::set-output name=ok::1"
          git push https://${{ secrets.GH_PAT }}@github.com/lmmx/aws-openapi-schemas.git
      - name: Report success
        if: ${{ steps.deploy.outputs.ok == '1' }}
        run: |
          echo "Deployed successfully"
